# serverless.yml
service: affordability-api-backend

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-central-1
  # iam:
  #   role:
  #     statements:
  #       - Effect: "Allow"
  #         Action: "lambda:InvokeFunction"
  #         Resource: "arn:aws:lambda:${aws:region}:${aws:accountId}:function:${self:service}-${sls:stage}-processTinkData"

  environment:
    TINK_CLIENT_ID: ${env:TINK_CLIENT_ID}
    TINK_CLIENT_SECRET: ${env:TINK_CLIENT_SECRET}
    PORTAL_HOST: 'localhost:3000'
    JWT_SECRET: ${env:JWT_SECRET}

functions:
  getReport:
    handler: handlers/getReport.getReport
    events:
      - httpApi:
          path: /reports/{applicantId}
          method: get
  handleTinkCallback:
    handler: handlers/handleTinkCallback.handleTinkCallback
    events:
      - httpApi:
          path: /callback/tink
          method: get
  create_check:
    handler: handlers/createCheck.createCheck
    events:
      - httpApi:
          path: /checks
          method: post
  validate_check:
    handler: handlers/validateCheck.validateCheck
    events:
      - httpApi:
          path: /checks/{token}
          method: get
  processTinkData:
    handler: handlers/processTinkData.processTinkData
  register:
    handler: handlers/auth.register
    events:
      - httpApi:
          path: /register
          method: post
  login:
    handler: handlers/auth.login
    events:
      - httpApi:
          path: /login
          method: post
  getApplicants:
    handler: handlers/getApplicants.getApplicants
    events:
      - httpApi:
          path: /applicants
          method: get